rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  // Match any document in the 'requests' collection
    match /requests/{requestId} {
      // Allow anyone to read documents in the 'requests' collection
      allow read: if true;
      
      // Allow write only if the user is authenticated and is the creator of the request
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for the user-specific requests subcollection
    match /users/{userId}/{document=**} {
      // Allow a user to read and write their own requests
     allow read, write: if request.auth != null ;
    }

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
   // match /{document=**} {
     // allow read, write: if request.time < timestamp.date(2024, 5, 23);
   // }
  }
}